{"version":3,"sources":["Firebase.js","Header.js","SearchResults.js","AddSchool.js","Favourite.js","Favourites.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Header","state","favouriteLength","database","ref","on","data","favouritesObject","val","Favourites","console","log","favouriteSchool","newFavouriteArray","favourite","push","length","setState","favouritesLength","this","props","schoolHandler","radiusHandler","handleCityInput","handleCountryInput","submitHandler","action","onSubmit","className","onChange","type","placeholder","id","required","htmlFor","name","value","activeClassName","exact","to","Component","SearchResults","handleAddFav","address","dbFavouritesRef","schoolName","schoolAddress","schoolNotes","savedSchool","userCityInput","userCountryInput","schoolResults","map","schoolObj","location","formattedAddress","join","onClick","schoolsAdded","newSchoolObj","AddSchool","addSchool","e","preventDefault","schoolFormattedAddress","street","city","province","postalCode","country","dbRef","userNewSchool","schoolType","schoolNote","updateAddress","event","property","target","checked","Favourite","removeSchool","schoolRef","child","remove","handleAddNotes","schoolId","update","school","favourites","userFavourite","favouritesArray","notes","App","getData","axios","method","responseType","url","params","client_id","client_secret","near","cityInput","countryInput","categoryId","schoolTypeId","radius","v","then","res","response","venues","filteredArray","filter","object","includes","categories","catch","err","newSchoolObject","NewSchools","newSchoolArray","userSchoolType","filteredNewSchoolArray","addedSchoolCity","toLowerCase","addedSchoolCountry","newSchool","handleSubmit","isActive","handleSchoolType","handleRadius","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ae73d01.chunk.js","sourcesContent":["\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCx_22IVNfxHM8TyjNoRqbqbf30j2flMgU\",\r\n    authDomain: \"collegenavigator-40c76.firebaseapp.com\",\r\n    projectId: \"collegenavigator-40c76\",\r\n    storageBucket: \"collegenavigator-40c76.appspot.com\",\r\n    messagingSenderId: \"497329332909\",\r\n    appId: \"1:497329332909:web:c15591a2de202a9fe99c24\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport firebase from './Firebase'\r\n// import AddSchool from './AddSchool'\r\n\r\n\r\nclass Header extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state={\r\n            favouriteLength:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const dbRef = firebase.database().ref();\r\n\r\n        dbRef.on('value', (data) => {\r\n            const firebaseDataObj = data.val();\r\n            const favouritesObject = firebaseDataObj.Favourites;\r\n            console.log(favouritesObject, \"please work or i'll be sad\");\r\n            let newFavouriteArray = [];\r\n            let favouriteSchool;\r\n\r\n            for (let favourite in favouritesObject) {\r\n                favouriteSchool = favouritesObject[favourite];\r\n                newFavouriteArray.push(favouriteSchool);\r\n            }\r\n\r\n            console.log(newFavouriteArray.length - 1);\r\n            this.setState({\r\n                favouritesLength: newFavouriteArray.length - 1\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n    const { schoolHandler, radiusHandler, handleCityInput, handleCountryInput, submitHandler } = this.props;\r\n        return (\r\n            <header>\r\n                <h1>College Navigator</h1>\r\n                <form action='submit' onSubmit={submitHandler}>\r\n                    <div className=\"cityInputs\">\r\n                    <input onChange={handleCityInput} type=\"text\" placeholder='City' id='citySearch' required/>\r\n                    <label className='srOnly' htmlFor=\"citySearch\">Please enter a city to search</label>\r\n\r\n                    <input onChange={handleCountryInput} type=\"text\" placeholder='Province/State OR Country' id='countrySearch' required/>\r\n                    <label className=\"srOnly\" htmlFor=\"countrySearch\">Please enter the country the city is in</label>\r\n                    </div>\r\n                    \r\n                    <div className=\"radiusInputs\">\r\n                    <legend>Search Radius</legend>\r\n                    <input onChange={radiusHandler} type=\"radio\" id='shortRadius' name='radius' value='5000' required/>\r\n                    <label htmlFor=\"shortRadius\">5KM</label>\r\n                    <input onChange={radiusHandler} type=\"radio\" id='mediumRadius' name='radius' value='10000' />\r\n                    <label htmlFor=\"mediumRadius\">10KM</label>\r\n                    <input onChange={radiusHandler} type=\"radio\" id='longRadius' name='radius' value='25000' />\r\n                    <label htmlFor=\"longRadius\">25KM</label>\r\n                    <input onChange={radiusHandler} type=\"radio\" id='xlongRadius' name='radius' value='50000' />\r\n                    <label htmlFor=\"xlongRadius\">50KM</label>\r\n                    </div>\r\n                    \r\n                    <div className=\"schoolTypeInputs\">\r\n                    <legend>School Type</legend>\r\n                    <input onChange={schoolHandler} type=\"radio\" id='university' name='schoolType' value='4bf58dd8d48988d1ae941735' required/>\r\n                    <label htmlFor=\"university\">University</label>\r\n                    <input onChange={schoolHandler} type=\"radio\" id='college' name='schoolType' value='4bf58dd8d48988d1a2941735' />\r\n                    <label htmlFor=\"college\">College</label>\r\n                    <input onChange={schoolHandler} type=\"radio\" id='tradeSchool' name='schoolType' value='4bf58dd8d48988d1ad941735' />\r\n                    <label htmlFor=\"tradeSchool\">Trade School</label>\r\n                    </div>\r\n\r\n                    <button>Find Me Schools!</button>\r\n                </form>\r\n                <nav>\r\n                    <ul>\r\n                        <li>USERNAME!!!!</li>\r\n                        <li>\r\n                            <NavLink activeClassName=\"active\" exact to=\"/\">Home</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink activeClassName=\"active\" to=\"/favourites\">Favourite Schools ({this.state.favouritesLength})</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink activeClassName=\"active\" to=\"/addSchool\">Add School</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import { Component, Fragment } from 'react';\r\nimport firebase from './Firebase.js';\r\n\r\n\r\nclass SearchResults extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            // schoolName:'',\r\n            // schoolAddress: []\r\n            savedSchool: {\r\n                schoolName: '',\r\n                schoolAddress: [],\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    handleAddFav = (name, address) => {\r\n        // console.log(name, address);\r\n\r\n        // this.setState({\r\n        //     schoolName: name,\r\n        //     schoolAddress: address,\r\n        // })\r\n        const dbFavouritesRef = firebase.database().ref('Favourites')\r\n        const favouriteSchool = {\r\n            schoolName: name,\r\n            schoolAddress: [...address],\r\n            schoolNotes: ''\r\n        }\r\n        dbFavouritesRef.push(favouriteSchool);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <h2>Your search results for {this.props.userCityInput}, {this.props.userCountryInput}</h2>\r\n                {\r\n                this.props.schoolResults.map((schoolObj) => {\r\n                    return(\r\n                    <div className=\"schoolResults\">\r\n                        <details key={schoolObj.id}>\r\n                            <summary>{schoolObj.name}</summary>\r\n                                <p>{schoolObj.location.formattedAddress.join(', ')}</p>\r\n                        </details>\r\n                        <button \r\n                        onClick={ () => {this.handleAddFav(schoolObj.name, schoolObj.location.formattedAddress)} }\r\n                        >Add to favourites\r\n                        </button>\r\n                    </div>\r\n                    )\r\n                })\r\n                }\r\n                {\r\n                this.props.schoolsAdded.map((newSchoolObj) => {\r\n                    return(\r\n                    <div className=\"schoolResults\">\r\n                        <details key={newSchoolObj.id}>\r\n                            <summary>{newSchoolObj.schoolName}</summary>\r\n                                <p>{newSchoolObj.schoolAddress.join(', ')}</p>\r\n                        </details>\r\n                        <button \r\n                        onClick={ () => {this.handleAddFav(newSchoolObj.schoolName, newSchoolObj.schoolAddress)} }\r\n                        >Add to favourites\r\n                        </button>\r\n                    </div>\r\n                    )\r\n                })\r\n                }\r\n            </Fragment>\r\n            \r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResults;","import { Component, Fragment } from 'react';\r\nimport firebase from './Firebase.js';\r\n\r\nclass AddSchool extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n                schoolName:'',\r\n                schoolType: '',\r\n                schoolNote: '',\r\n                schoolAddress: {\r\n                    street: '',\r\n                    city: '',\r\n                    province: '',\r\n                    postalCode: '',\r\n                    country: ''\r\n                }\r\n        };\r\n        \r\n        // this.submitNewSchool = this.submitNewSchool.bind(this);\r\n\r\n    }\r\n\r\n    addSchool = (e) => {\r\n        e.preventDefault();\r\n        \r\n        \r\n        let schoolFormattedAddress = [this.state.schoolAddress.street, \r\n            this.state.schoolAddress.city + \" \" + this.state.schoolAddress.province + \" \" + this.state.schoolAddress.postalCode,\r\n            this.state.schoolAddress.country ];\r\n        // console.log(schoolFormattedAddress, 'for');\r\n        \r\n        //make a referance to the database\r\n        const dbRef = firebase.database().ref('NewSchools')\r\n        const userNewSchool = {\r\n            schoolName:this.state.schoolName,\r\n            schoolType:this.state.schoolType,\r\n            schoolAddress: schoolFormattedAddress,\r\n            schoolNote: this.state.schoolNote\r\n        };\r\n        console.log(userNewSchool, 'newschool');\r\n        dbRef.push(userNewSchool);\r\n    }\r\n\r\n    updateAddress = (event, property) =>{\r\n        let schoolAddress = {...this.state.schoolAddress};\r\n        schoolAddress[property] = event.target.value;\r\n        this.setState({schoolAddress});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <form >\r\n                    <label htmlFor=\"newSchoolName\">School Name</label>\r\n                        <input type=\"text\" id=\"newSchoolName\"\r\n                        value={this.state.schoolName}\r\n                        onChange={(event) => this.setState({schoolName: event.target.value})}/><br/>\r\n                    <legend>School Type</legend>\r\n                        <input type=\"radio\" id='university' name='schoolType' \r\n                        value='University' required \r\n                        checked={this.state.schoolType === \"University\"}\r\n                        onChange={(event) => this.setState({ schoolType: event.target.value })}/>\r\n                    <label htmlFor=\"university\">University</label>\r\n                        <input type=\"radio\" id='college' name='schoolType'\r\n                        value='Community College' \r\n                        checked={this.state.schoolType === \"Community College\"}\r\n                        onChange={(event) => this.setState({ schoolType: event.target.value })}/>\r\n                    <label htmlFor=\"college\">College</label>\r\n                        <input type=\"radio\" id='tradeSchool' name='schoolType' \r\n                        value='Trade School'\r\n                        checked={this.state.schoolType === \"Trade School\"}\r\n                        onChange={(event) => this.setState({ schoolType: event.target.value })}/>\r\n                    <label htmlFor=\"tradeSchool\">Trade School</label><br/>\r\n                    <label htmlFor=\"newSchoolAddress\">Address</label>\r\n                        <input type=\"text\" id=\"newSchoolAddress\"\r\n                        value={this.state.schoolAddress.street}\r\n                        onChange={(event) => this.updateAddress(event, 'street')}/>\r\n                    <label htmlFor=\"newSchoolCity\">City</label>\r\n                        <input type=\"text\" id=\"newSchoolCity\" \r\n                        value={this.state.schoolAddress.city}\r\n                        onChange={(event) => this.updateAddress(event, 'city')} /><br/>\r\n                    <label htmlFor=\"newSchoolProvince\">Province</label>\r\n                    <input type=\"text\" id=\"newSchoolProvince\"\r\n                        value={this.state.schoolAddress.province}\r\n                        onChange={(event) => this.updateAddress(event, 'province')} />\r\n                    <label htmlFor=\"newSchoolPostal\">Postal Code</label>\r\n                        <input type=\"text\" id=\"newSchoolPostal\" \r\n                        value={this.state.schoolAddress.postalCode}\r\n                        onChange={(event) => this.updateAddress(event, 'postalCode')} />\r\n                    <label htmlFor=\"newSchoolCountry\">Country</label>\r\n                        <input type=\"text\" id=\"newSchoolCountry\"\r\n                        value={this.state.schoolAddress.country}\r\n                        onChange={(event) => this.updateAddress(event, 'country')} /><br/>\r\n                    <label htmlFor=\"addNote\">Note</label>\r\n                        <textarea\r\n                        value={this.state.schoolNote}\r\n                        onChange={(event) => this.setState({ schoolNote: event.target.value })}></textarea><br/>\r\n                    <button onClick={this.addSchool}>Add new school</button>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddSchool;","import { Component } from 'react';\r\nimport firebase from './Firebase.js';\r\n\r\nclass Favourite extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            schoolNotes: '',\r\n            schoolId: ''\r\n        }\r\n    }\r\n\r\n    removeSchool = (schoolRef) => {\r\n        const dbFavouritesRef = firebase.database().ref('Favourites');\r\n        dbFavouritesRef.child(schoolRef).remove();\r\n    }\r\n\r\n    handleAddNotes = (schoolId) => {\r\n        const dbFavouritesRef = firebase.database().ref('Favourites')\r\n        dbFavouritesRef.child(schoolId).update({ schoolNotes: this.state.schoolNotes });\r\n       this.setState({\r\n           schoolNotes: ''\r\n       })\r\n    }\r\n\r\n   render() { \r\n       const {id, schoolName, schoolAddress, schoolNotes} = this.props.school;\r\n       return (\r\n           <li key={id}>\r\n               <h3>{schoolName}</h3>\r\n               <p>{schoolAddress}</p>\r\n               <p><span>Notes: </span>{schoolNotes}</p>\r\n               <label htmlFor=\"notes\">Notes</label>\r\n               <textarea value={this.state.schoolNotes} name=\"notes\" id=\"notes\" onChange={(event) => this.setState({schoolNotes: event.target.value, schoolId: id })}></textarea>\r\n               <button onClick={() => { this.handleAddNotes(id) }}>Add Notes</button>\r\n               <button onClick={() => { this.removeSchool(id) }}>Remove School</button>\r\n           </li>\r\n       )\r\n   }\r\n}\r\nexport default Favourite;","import { Component, Fragment } from 'react';\r\nimport firebase from './Firebase.js';\r\nimport Favourite from './Favourite.js';\r\n\r\nclass Favourites extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state ={\r\n            favourites: [],\r\n            schoolNotes: '',\r\n            schoolId: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const dbRef = firebase.database().ref();\r\n\r\n        dbRef.on('value', (data) => {\r\n            const firebaseDataObj = data.val();\r\n            const favouritesObject = firebaseDataObj.Favourites;\r\n\r\n            let favouritesArray = [];\r\n            let userFavourite;\r\n\r\n            for (let schoolId in favouritesObject) {\r\n                userFavourite = favouritesObject[schoolId];\r\n                userFavourite.id = schoolId; \r\n                userFavourite.notes = this.state.schoolNotes\r\n                favouritesArray.push(userFavourite);\r\n            }\r\n\r\n            this.setState({\r\n                favourites: favouritesArray\r\n            })\r\n        })\r\n    }\r\n\r\n    // removeSchool = (schoolRef) => {\r\n    //     const dbFavouritesRef = firebase.database().ref('Favourites');\r\n    //     dbFavouritesRef.child(schoolRef).remove();\r\n    // }\r\n\r\n    // handleAddNotes = (schoolId) => {\r\n    //     const dbFavouritesRef = firebase.database().ref('Favourites')\r\n    //     dbFavouritesRef.child(schoolId).update({schoolNotes: this.state.schoolNotes});\r\n    //     this.setState({\r\n    //         schoolNotes:''\r\n    //     })\r\n    //     document.querySelector('textarea').value = '';\r\n    // }\r\n\r\n\r\n   render() { \r\n       console.log(this.state.favourites);\r\n       return (\r\n           <Fragment>\r\n               <h2>Favourites!</h2>\r\n               <ul>\r\n               {\r\n                   this.state.favourites.map((school) => {\r\n                       console.log(school);\r\n                       return(\r\n                           <>\r\n                           <Favourite \r\n                           school={school}\r\n                           />\r\n                        {/* <li key={school.id}>\r\n                            <h3>{school.schoolName}</h3>\r\n                            <p>{school.schoolAddress}</p>\r\n                            <p><span>Notes: </span>{school.schoolNotes}</p>\r\n                            <label htmlFor=\"notes\">Notes</label>\r\n                            <textarea name=\"notes\" id=\"notes\" onChange={(event) => this.setState({schoolNotes: event.target.value, schoolId: school.id})}></textarea>\r\n                            <button onClick={() => {this.handleAddNotes(school.id)}}>Add Notes</button>\r\n                            <button onClick={() => {this.removeSchool(school.id)} }>Remove School</button>\r\n                        </li> */}\r\n                        </>\r\n                       )\r\n                   })\r\n               }\r\n               </ul>\r\n           </Fragment>\r\n       )\r\n   }\r\n}\r\nexport default Favourites;","import { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport firebase from './Firebase.js';\r\nimport Header from './Header.js';\r\nimport SearchResults from './SearchResults.js';\r\nimport './App.css';\r\nimport AddSchool from './AddSchool';\r\nimport Favourites from './Favourites.js';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      schoolResults: [],\r\n      favourites: [],\r\n      radius: '',\r\n      schoolTypeId: '',\r\n      cityInput: '',\r\n      countryInput: '',\r\n      formattedAddress: [],\r\n      newSchool: [],\r\n      favouriteLength: '',\r\n      isActive: false\r\n    }\r\n  }\r\n\r\n  // handleFavouriteLength = (length) => {\r\n  //   this.setState({\r\n  //     favouriteLength: length\r\n  //   }, console.log(this.state.favouriteLength))\r\n  // }\r\n\r\n getData = () => {\r\n   axios({\r\n    method: 'GET',\r\n    responseType: 'json',\r\n    url: 'https://api.foursquare.com/v2/venues/search',\r\n    params: {\r\n      client_id:'SMUUEFGVRENHIW3EQX5ICCFCTNQPPIWVXP21E2BQVRH421OF',\r\n      client_secret:'EVNPHQ3EYKNQKZMOAKRVUTT0KDHXXGNUWUCY0LFZTVRE2BAF',\r\n      near: this.state.cityInput + \" \" + this.state.countryInput,\r\n      categoryId:this.state.schoolTypeId,\r\n      radius:this.state.radius, //its in metres\r\n      v: 20201205\r\n            }\r\n  }).then((res) => {\r\n    console.log(res.data.response.venues);\r\n    const dataArray = res.data.response.venues;\r\n\r\n    // const filter = dataArray.filter((object => object.name.includes(\"University\")))\r\n    // console.log(filter);\r\n    const filteredArray = dataArray.filter((object => {\r\n      return object.name.includes(\"University\") || object.categories[0].name === \"Community College\" || object.categories[0].name === \"Trade School\" && object.location.formattedAddress.length > 2})\r\n    );\r\n    console.log(filteredArray);\r\n\r\n   \r\n    // this.props.schoolResults[0].location.formattedAddress\r\n    \r\n\r\n    this.setState({\r\n      schoolResults: filteredArray,\r\n      // formattedAddress:\r\n    })\r\n    console.log(this.state.schoolResults[0].location.formattedAddress);\r\n\r\n  }).catch ((err) => {\r\n    console.log(err, 'It aint working');\r\n  })\r\n\r\n   const dbRef = firebase.database().ref();\r\n   dbRef.on('value', (data) => {\r\n     const firebaseDataObj = data.val();\r\n     const newSchoolObject = firebaseDataObj.NewSchools;\r\n\r\n     let newSchoolArray = [];\r\n     let userNewSchool;\r\n\r\n     for (let schoolId in newSchoolObject) {\r\n       userNewSchool = newSchoolObject [schoolId];\r\n       userNewSchool.id = schoolId;\r\n      //  userNewSchool.notes = this.state.schoolNotes\r\n       newSchoolArray.push(userNewSchool);\r\n     }\r\n     //4bf58dd8d48988d1ae941735-University\r\n     //  Community College- 4bf58dd8d48988d1a2941735\r\n     //  Trade School- 4bf58dd8d48988d1ad941735\r\n     let userSchoolType= '';\r\n     if (this.state.schoolTypeId === '4bf58dd8d48988d1ae941735'){\r\n       userSchoolType = 'University'\r\n     } else if (this.state.schoolTypeId === '4bf58dd8d48988d1a2941735'){\r\n       userSchoolType = 'Community College'\r\n     } else if (this.state.schoolTypeId === '4bf58dd8d48988d1ad941735'){\r\n        userSchoolType = 'Trade School'\r\n     }\r\n     console.log(userSchoolType, 'school type');\r\n     console.log(this.state.cityInput, 'city type');\r\n\r\n\r\n     const filteredNewSchoolArray = newSchoolArray.filter((object => {\r\n      //  making inputs and comparison case sensitive\r\n\r\n       const addedSchoolCity = object.schoolAddress[1].toLowerCase();\r\n       const addedSchoolCountry = object.schoolAddress[2].toLowerCase();\r\n       return (object.schoolType === userSchoolType && addedSchoolCity.includes(this.state.cityInput.toLowerCase()) && addedSchoolCountry.includes(this.state.countryInput.toLowerCase()))\r\n     })\r\n     );\r\n\r\n     console.log(filteredNewSchoolArray, 'filtered school array');\r\n\r\n     this.setState({\r\n       newSchool: newSchoolArray\r\n     })\r\n     console.log(this.state.newSchool, 'new school array');\r\n   })\r\n\r\n }\r\n\r\n handleSubmit = (e) => {\r\n   e.preventDefault();\r\n   this.getData();\r\n    //  const address = this.state.schoolResults[0].location.formattedAddress\r\n    //  console.log(address)\r\n  this.setState ({\r\n    isActive: true\r\n  })\r\n }\r\n\r\n handleSchoolType = (e) => {\r\n   this.setState({\r\n     schoolTypeId: e.target.value\r\n   })\r\n }\r\n\r\n handleRadius = (e) => {\r\n   console.log(e.target.value)\r\n   this.setState({\r\n     radius: e.target.value\r\n   })\r\n }\r\n\r\n handleCityInput = (e) => {\r\n   console.log(e.target.value)\r\n  this.setState({\r\n    cityInput: e.target.value\r\n  })\r\n }\r\n\r\n handleCountryInput = (e) => {\r\n   this.setState({\r\n     countryInput: e.target.value\r\n   })\r\n }\r\n\r\n\r\n\r\n  render() {\r\n    return(\r\n      <Router>\r\n        \r\n        <Header\r\n        // schoolId={this.schoolTypeId}\r\n        // radius={this.state.radius}\r\n        // city={this.state.cityInput}\r\n        schoolHandler={this.handleSchoolType}\r\n        radiusHandler={this.handleRadius}\r\n        handleCityInput={this.handleCityInput}\r\n        handleCountryInput={this.handleCountryInput}\r\n        submitHandler={this.handleSubmit}\r\n        />\r\n        {/* <Favourites /> */}\r\n        {this.state.isActive \r\n        ? <Route exact path=\"/\" render={() => {\r\n          return (\r\n            \r\n            <SearchResults \r\n              schoolResults = {this.state.schoolResults}\r\n              schoolsAdded = {this.state.newSchool}\r\n              userCityInput = {this.state.cityInput}  \r\n              userCountryInput = {this.state.countryInput}\r\n              />\r\n          )\r\n        }\r\n        }/> \r\n        : null \r\n        }\r\n\r\n        <Route path=\"/addSchool\" component={AddSchool} /> \r\n        <Route path=\"/favourites\" component={Favourites} /> \r\n        {/* <Route path=\"/favourites\" render={() => {\r\n          return (\r\n              <Favourites \r\n              getFavouritesLength = {() => {this.handleFavouriteLength()} } />\r\n          )\r\n        }\r\n        }/> */}\r\n         \r\n         \r\n\r\n        {/* <Route exact path=\"/school/:schoolID\" component={SchoolDetails} /> */}\r\n        \r\n        \r\n\r\n        \r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}