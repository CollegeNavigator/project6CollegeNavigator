[{"C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\index.js":"1","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\App.js":"2","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\reportWebVitals.js":"3","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Header.js":"4","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\SearchResults.js":"5","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Firebase.js":"6","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Footer.js":"7","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Favourites.js":"8","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\AddSchool.js":"9","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Favourite.js":"10","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Auth\\Login.js":"11","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Auth\\SignUp.js":"12","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Auth\\SignIn.js":"13"},{"size":517,"mtime":1610216277533,"results":"14","hashOfConfig":"15"},{"size":7652,"mtime":1610468451353,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1610216277534,"results":"17","hashOfConfig":"15"},{"size":9190,"mtime":1610467913582,"results":"18","hashOfConfig":"15"},{"size":3840,"mtime":1610458969280,"results":"19","hashOfConfig":"15"},{"size":546,"mtime":1610420524944,"results":"20","hashOfConfig":"15"},{"size":687,"mtime":1610420524664,"results":"21","hashOfConfig":"15"},{"size":1905,"mtime":1610461050184,"results":"22","hashOfConfig":"15"},{"size":6390,"mtime":1610420524643,"results":"23","hashOfConfig":"15"},{"size":2907,"mtime":1610459820561,"results":"24","hashOfConfig":"15"},{"size":1547,"mtime":1610463048459,"results":"25","hashOfConfig":"15"},{"size":4709,"mtime":1611091877402,"results":"26","hashOfConfig":"15"},{"size":3870,"mtime":1611091693863,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1b694fh",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\index.js",[],["58","59"],"C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\App.js",["60","61","62"],"import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n// adding react scroll library\r\nimport { animateScroll as scroll, scroller } from \"react-scroll\";\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport firebase from './Firebase.js';\r\nimport Header from './Header.js';\r\nimport SearchResults from './SearchResults.js';\r\nimport './App.css';\r\nimport AddSchool from './AddSchool';\r\nimport Favourites from './Favourites.js';\r\nimport Footer from './Footer.js';\r\nimport Login from './Auth/Login.js';\r\n\r\n\r\nlet city = \"\";\r\nlet country = \"\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      schoolResults: [],\r\n      favourites: [],\r\n      radius: '',\r\n      schoolTypeId: '',\r\n      cityInput: '',\r\n      countryInput: '',\r\n      formattedAddress: [],\r\n      newSchool: [],\r\n      favouriteLength: '',\r\n      isActive: false,\r\n      directMeHome: false\r\n    }\r\n  }\r\n\r\n// scroll to element function\r\n scrollTo() {\r\n    scroller.scrollTo('scroll-to-element', {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart'\r\n    })\r\n  }\r\n\r\n getData = () => {\r\n  //Grab data from API\r\n   this.apiCall();\r\n  //Grab data from firebase\r\n   this.fireBaseCall();\r\n  //  scrolls to search results when API call is made\r\n  this.scrollTo();\r\n }\r\n\r\n\r\n handleSubmit = (e) => {\r\n   e.preventDefault();\r\n   this.getData();\r\n   this.setState({\r\n     directMeHome: true\r\n   })\r\n }\r\n\r\n handleSchoolType = (e) => {\r\n   this.setState({\r\n     schoolTypeId: e.target.value\r\n   })\r\n }\r\n\r\n handleRadius = (e) => {\r\n   this.setState({\r\n     radius: e.target.value\r\n   })\r\n }\r\n\r\n handleCityInput = (e) => {\r\n  this.setState({\r\n    cityInput: e.target.value\r\n  })\r\n }\r\n\r\n handleCountryInput = (e) => {\r\n   this.setState({\r\n     countryInput: e.target.value\r\n   })\r\n }\r\n\r\n  fireBaseCall() {\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.on('value', (data) => {\r\n      const firebaseDataObj = data.val();\r\n      const newSchoolObject = firebaseDataObj.NewSchools;\r\n\r\n      // create and store usable, formatted firebase data \r\n      let newSchoolArray = formatFirebaseData(newSchoolObject);\r\n      // convert and store API school type id (long alphanumeric string) to english school type for usable comparison\r\n      let userSchoolType = this.convertCategoryIdToName();\r\n\r\n      // filter firebase formatted school data by comparing school type with usr chosen school type and return results in an array\r\n      const filteredNewSchoolArray = this.compareUserInputAndCreateResultsArray(newSchoolArray, userSchoolType);\r\n\r\n      //store results in state\r\n      this.setState({\r\n        newSchool: filteredNewSchoolArray\r\n      });\r\n    });\r\n    // store in variables to pass as props\r\n    city = this.state.cityInput;\r\n    country = this.state.countryInput;\r\n  }\r\n\r\n  compareUserInputAndCreateResultsArray(newSchoolArray, userSchoolType) {\r\n    return newSchoolArray.filter((object => {\r\n\r\n      //  making inputs and comparison case sensitive\r\n      const addedSchoolCity = object.schoolAddress[1].toLowerCase();\r\n      const addedSchoolCountry = object.schoolAddress[2].toLowerCase();\r\n      \r\n      return ((object.schoolType === userSchoolType) && addedSchoolCity.includes(this.state.cityInput.toLowerCase()) && addedSchoolCountry.includes(this.state.countryInput.toLowerCase())) || ((object.schoolType === userSchoolType) && addedSchoolCity.includes(this.state.cityInput.toLowerCase()) && addedSchoolCity.includes(this.state.cityInput.toLowerCase()))\r\n    })\r\n    );\r\n  }\r\n\r\n  convertCategoryIdToName() {\r\n    let userSchoolType = '';\r\n    if (this.state.schoolTypeId === '4bf58dd8d48988d1ae941735') {\r\n      userSchoolType = 'University';\r\n    } else if (this.state.schoolTypeId === '4bf58dd8d48988d1a2941735') {\r\n      userSchoolType = 'Community College';\r\n    } else if (this.state.schoolTypeId === '4bf58dd8d48988d1ad941735') {\r\n      userSchoolType = 'Trade School';\r\n    }\r\n    return userSchoolType;\r\n  }\r\n\r\n  // API call function which draws data from the API and handles errors if data is not found \r\n  apiCall() {\r\n    axios({\r\n      method: 'GET',\r\n      responseType: 'json',\r\n      url: 'https://api.foursquare.com/v2/venues/search',\r\n      params: {\r\n        client_id: 'SMUUEFGVRENHIW3EQX5ICCFCTNQPPIWVXP21E2BQVRH421OF',\r\n        client_secret: 'EVNPHQ3EYKNQKZMOAKRVUTT0KDHXXGNUWUCY0LFZTVRE2BAF',\r\n        near: this.state.cityInput + \" \" + this.state.countryInput,\r\n        categoryId: this.state.schoolTypeId,\r\n        radius: this.state.radius,\r\n        v: 20201205\r\n      }\r\n    }).then((res) => {\r\n      const dataArray = res.data.response.venues;\r\n\r\n\r\n      const filteredArray = ourCategoryFilter(dataArray);\r\n\r\n\r\n\r\n      this.setState({\r\n        schoolResults: filteredArray,\r\n        isActive: true\r\n      });\r\n\r\n    }).catch((err) => {\r\n      this.setState({\r\n        isActive: false\r\n      });\r\n      Swal.fire({\r\n        title: \"No schools found\",\r\n        text: \"Please Try Another City and Province/Country\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    });\r\n  }\r\n\r\n componentDidMount() {    \r\n        // check if user sign in or singed out        \r\n        firebase.auth().onAuthStateChanged((user)=> {\r\n        if(user){\r\n           this.setState({ userSignedIn: true });\r\n           this.setState({ isGuest: firebase.auth().currentUser.isAnonymous });\r\n        }else{\r\n           this.setState({ userSignedIn: false });\r\n        }\r\n       \r\n\r\n        })\r\n      }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Header\r\n          schoolHandler={this.handleSchoolType}\r\n          radiusHandler={this.handleRadius}\r\n          handleCityInput={this.handleCityInput}\r\n          handleCountryInput={this.handleCountryInput}\r\n          submitHandler={this.handleSubmit}\r\n        />\r\n        <div className=\"wrapper\">\r\n          {this.state.isActive ? (\r\n            <Route\r\n              exact\r\n              path=\"/searchResults\"\r\n              render={() => {\r\n                return (\r\n                  <>\r\n                    <SearchResults\r\n                      schoolResults={this.state.schoolResults}\r\n                      schoolsAdded={this.state.newSchool}\r\n                      userCityInput={city}\r\n                      userCountryInput={country}\r\n                    />\r\n                  </>\r\n                );\r\n              }}\r\n            />\r\n          ) : null}\r\n\r\n          <Route path=\"/addSchool\" component={AddSchool} />\r\n          <Route path=\"/favourites\" component={Favourites} />\r\n\r\n          <Route path=\"/login\" component={Login} />\r\n          {/* <Login/> */}\r\n        </div>\r\n        {this.state.userSignedIn && !this.state.isGuest && <Footer />}\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n// Formats user input schools from firebase into identical objects with ID's and pushes formatted objects to new array\r\nfunction formatFirebaseData(newSchoolObject) {\r\n  let newSchoolArray = [];\r\n  let userNewSchool;\r\n\r\n  for (let schoolId in newSchoolObject) {\r\n    userNewSchool = newSchoolObject[schoolId];\r\n    userNewSchool.id = schoolId;\r\n\r\n    newSchoolArray.push(userNewSchool);\r\n  }\r\n  return newSchoolArray;\r\n}\r\n\r\n// Function to filter our data by category type matching the user selection - ie: university, college or trade school \r\nfunction ourCategoryFilter(dataArray) {\r\n  return dataArray.filter((object => {\r\n    return object.name.includes(\"University\") || object.categories[0].name === \"Community College\" || object.categories[0].name === \"Trade School\" && object.location.formattedAddress.length > 2;\r\n  })\r\n  );\r\n}\r\n\r\n","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\reportWebVitals.js",[],"C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Header.js",["63","64"],"import { Component } from 'react';\r\nimport { NavLink, Redirect,useLocation,useHistory } from 'react-router-dom';\r\nimport firebase from './Firebase'\r\n\r\n\r\n\r\nclass Header extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state={\r\n            favouriteLength:[],\r\n            redirect: false,\r\n            userSignedIn: false,\r\n            userId:'',\r\n            isGuest: false\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount() {    \r\n        // console.log(\"guest\", firebase.auth().currentUser.isAnonymous);  \r\n        \r\n          \r\n        // check if user sign in or singed out        \r\n        firebase.auth().onAuthStateChanged((user)=> {\r\n          if (user) {\r\n             console.log(\"rooo\",user.uid);\r\n           this.setState({isGuest: firebase.auth().currentUser.isAnonymous})\r\n             this.setState({userSignedIn:true});\r\n             const dbRef = firebase.database().ref();\r\n\r\n             dbRef.on(\"value\", (data) => {\r\n               console.log(\"sign\", this.state.userSignedIn);\r\n\r\n               const firebaseDataObj = data.val();\r\n               const favouritesObject =\r\n                 firebaseDataObj.Favourites[firebase.auth().currentUser.uid];\r\n               let newFavouriteArray = [];\r\n               let favouriteSchool;\r\n               console.log(\"fav\", favouritesObject, this.state.userId);\r\n\r\n               for (let favourite in favouritesObject) {\r\n                 favouriteSchool = favouritesObject[favourite];\r\n                 newFavouriteArray.push(favouriteSchool);\r\n               }\r\n\r\n               this.setState({\r\n                 favouritesLength: newFavouriteArray.length,\r\n               });\r\n             });\r\n            // User is signed in.\r\n          } else {\r\n              console.log('bakka')\r\n              this.setState({ \r\n                  userSignedIn: false\r\n             });\r\n            // No user is signed in.\r\n          }\r\n        });\r\n\r\n        // const dbRef = firebase.database().ref();\r\n\r\n        // dbRef.on('value', (data) => {\r\n        //     console.log('sign',this.state.userSignedIn)\r\n            \r\n               \r\n           \r\n        //     const firebaseDataObj = data.val();\r\n        //     const favouritesObject = firebaseDataObj.Favourites[firebase.auth().currentUser.uid];\r\n        //     let newFavouriteArray = [];\r\n        //     let favouriteSchool;\r\n        //     console.log(\"fav\", favouritesObject, this.state.userId);\r\n\r\n        //     for (let favourite in favouritesObject) {\r\n        //         favouriteSchool = favouritesObject[favourite];\r\n        //         newFavouriteArray.push(favouriteSchool);\r\n        //     }\r\n\r\n        //     this.setState({\r\n        //         favouritesLength: newFavouriteArray.length \r\n        //     }) \r\n        // })\r\n\r\n\r\n    }\r\n\r\n    setRedirect = () => {\r\n        this.setState({\r\n            redirect:true\r\n        })\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if(this.state.redirect) {\r\n            this.setState({\r\n                redirect: false\r\n            })\r\n            return <Redirect exact to=\"/searchResults\" />;\r\n        }\r\n    }\r\n\r\n    render() {    \r\n    const { schoolHandler, radiusHandler, handleCityInput, handleCountryInput, submitHandler } = this.props;\r\n    if(!this.state.userSignedIn){\r\n        return  <Redirect to=\"/login\" />\r\n    }   \r\n    return (\r\n      <div>\r\n        {this.state.userSignedIn && (\r\n          <header>\r\n            <h1>College Navigator</h1>\r\n            <form action=\"submit\" onSubmit={submitHandler}>\r\n              <div className=\"wrapper\">\r\n                <div className=\"cityInputs\">\r\n                  <input\r\n                    onChange={handleCityInput}\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    id=\"citySearch\"\r\n                    required\r\n                  />\r\n                  <label className=\"srOnly\" htmlFor=\"citySearch\">\r\n                    Please enter a city to search\r\n                  </label>\r\n\r\n                  <input\r\n                    onChange={handleCountryInput}\r\n                    type=\"text\"\r\n                    placeholder=\"Province/State OR Country\"\r\n                    id=\"countrySearch\"\r\n                    required\r\n                  />\r\n                  <label className=\"srOnly\" htmlFor=\"countrySearch\">\r\n                    Please enter the country the city is in\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"radiusInputs\">\r\n                  <legend>Search Radius</legend>\r\n                  <div>\r\n                    <input\r\n                      onChange={radiusHandler}\r\n                      type=\"radio\"\r\n                      id=\"shortRadius\"\r\n                      name=\"radius\"\r\n                      value=\"5000\"\r\n                      required\r\n                    />\r\n                    <label htmlFor=\"shortRadius\">5KM</label>\r\n                    <input\r\n                      onChange={radiusHandler}\r\n                      type=\"radio\"\r\n                      id=\"mediumRadius\"\r\n                      name=\"radius\"\r\n                      value=\"10000\"\r\n                    />\r\n                    <label htmlFor=\"mediumRadius\">10KM</label>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <input\r\n                      onChange={radiusHandler}\r\n                      type=\"radio\"\r\n                      id=\"longRadius\"\r\n                      name=\"radius\"\r\n                      value=\"25000\"\r\n                    />\r\n                    <label htmlFor=\"longRadius\">25KM</label>\r\n                    <input\r\n                      onChange={radiusHandler}\r\n                      type=\"radio\"\r\n                      id=\"xlongRadius\"\r\n                      name=\"radius\"\r\n                      value=\"50000\"\r\n                    />\r\n                    <label htmlFor=\"xlongRadius\">50KM</label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"schoolTypeInputs\">\r\n                  <legend>School Type</legend>\r\n                  <input\r\n                    onChange={schoolHandler}\r\n                    type=\"radio\"\r\n                    id=\"university\"\r\n                    name=\"schoolType\"\r\n                    value=\"4bf58dd8d48988d1ae941735\"\r\n                    required\r\n                  />\r\n                  <label htmlFor=\"university\">University</label>\r\n                  <input\r\n                    onChange={schoolHandler}\r\n                    type=\"radio\"\r\n                    id=\"college\"\r\n                    name=\"schoolType\"\r\n                    value=\"4bf58dd8d48988d1a2941735\"\r\n                  />\r\n                  <label htmlFor=\"college\">College</label>\r\n                  <div>\r\n                    <input\r\n                      onChange={schoolHandler}\r\n                      type=\"radio\"\r\n                      id=\"tradeSchool\"\r\n                      name=\"schoolType\"\r\n                      value=\"4bf58dd8d48988d1ad941735\"\r\n                    />\r\n                    <label htmlFor=\"tradeSchool\">Trade School</label>\r\n                  </div>\r\n                </div>\r\n                {this.renderRedirect()}\r\n                <button onClick={this.setRedirect}>Find Schools!</button>\r\n              </div>\r\n            </form>\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  {this.state.userSignedIn && this.state.isGuest && (\r\n                    <button\r\n                      onClick={() => {\r\n                        firebase.auth().signOut();\r\n                        this.setState({ userSignedIn: false });\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  )}\r\n                  {this.state.userSignedIn && !this.state.isGuest && (\r\n                    <button\r\n                      onClick={() => {\r\n                        firebase.auth().signOut();\r\n                        this.setState({ userSignedIn: false });\r\n                      }}\r\n                    >\r\n                      Logout\r\n                    </button>\r\n                  )}\r\n                  {!this.state.userSignedIn && !this.state.isGuest && (\r\n                    <NavLink activeClassName=\"active\" to=\"/login\">\r\n                      Login\r\n                    </NavLink>\r\n                  )}\r\n                </li>\r\n                <li>\r\n                  <NavLink\r\n                    activeClassName=\"active\"\r\n                    exact\r\n                    to=\"/project6CollegeNavigator\"\r\n                  >\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink activeClassName=\"active\" to=\"/favourites\">\r\n                    Favourite Schools ({this.state.favouritesLength})\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink activeClassName=\"active\" to=\"/addSchool\">\r\n                    Add School\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </header>\r\n        )}\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\SearchResults.js",[],"C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Firebase.js",[],"C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Footer.js",["65"],"const { Fragment } = require(\"react\");\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n        <p>Juno College 2020 Created by <span>Clarke, Erzhena, Harry and Kyle &#169;</span></p>\r\n\r\n        <p><span>Photo by <a href=\"https://unsplash.com/@iemyoung?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Emily Karakis</a> on <a href=\"https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Favourites.js",[],"C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\AddSchool.js",[],"C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Favourite.js",[],"C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Auth\\Login.js",[],"C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Auth\\SignUp.js",["66"],"C:\\Users\\Erzhena\\Desktop\\project6CollegeNavigator\\src\\Auth\\SignIn.js",["67","68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":4,"column":27,"nodeType":"76","messageId":"77","endLine":4,"endColumn":33},{"ruleId":"78","severity":1,"message":"79","line":257,"column":100,"nodeType":"80","messageId":"81","endLine":257,"endColumn":102},{"ruleId":"78","severity":1,"message":"79","line":257,"column":148,"nodeType":"80","messageId":"81","endLine":257,"endColumn":150},{"ruleId":"74","severity":1,"message":"82","line":2,"column":28,"nodeType":"76","messageId":"77","endLine":2,"endColumn":39},{"ruleId":"74","severity":1,"message":"83","line":2,"column":40,"nodeType":"76","messageId":"77","endLine":2,"endColumn":50},{"ruleId":"74","severity":1,"message":"84","line":1,"column":9,"nodeType":"76","messageId":"77","endLine":1,"endColumn":17},{"ruleId":"74","severity":1,"message":"85","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":17},{"ruleId":"74","severity":1,"message":"85","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":17},{"ruleId":"74","severity":1,"message":"86","line":2,"column":29,"nodeType":"76","messageId":"77","endLine":2,"endColumn":39},{"ruleId":"74","severity":1,"message":"83","line":2,"column":40,"nodeType":"76","messageId":"77","endLine":2,"endColumn":50},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'scroll' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'Fragment' is assigned a value but never used.","'NavLink' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]